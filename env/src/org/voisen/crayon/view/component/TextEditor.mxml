<?xml version="1.0" encoding="utf-8"?>
<s:Scroller xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 xmlns:component="org.voisen.crayon.view.component.*"
		 creationComplete="init();" 
		 implements="org.voisen.crayon.view.component.IEditor">
	<fx:Metadata>
		[Style(name="gutterStyleName", inherit="no", type="String")]
		[Style(name="editorStyleName", inherit="no", type="String")]
		[Style(name="headerStyleName", inherit="no", type="String")]
	</fx:Metadata>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import org.voisen.crayon.view.component.model.TextEditorModel;
			
			[Bindable]
			private var model:TextEditorModel;
			
			private function init():void
			{
				model = new TextEditorModel( this );
			}
			
			public function initializeBuffer( filePath:String, bufferText:String ):void
			{
				model.filePath = filePath;
				editor.text = bufferText;
				model.newBuffer = false;
				model.update();
			}

			public function get newBuffer():Boolean
			{
				return model.newBuffer;
			}
			
			public function get buffer():String
			{
				return editor.text;
			}
			
			public function get filePath():String
			{
				return model.filePath;	
			}
			
			public function markAsSaved():void
			{
				model.markAsSaved();
			}
		]]>
	</fx:Script>
	<s:VGroup width="100%" height="100%" gap="0">
		<s:HGroup id="header" width="100%" paddingTop="5" paddingBottom="5" paddingRight="10" paddingLeft="10">
			<mx:Text text="{model.fileName}" styleName="{getStyle('headerStyleName')}" />
		</s:HGroup>
		<s:Line width="100%">
			<s:stroke>
				<s:SolidColorStroke color="#666666" weight="1"/>
			</s:stroke>
		</s:Line>
		<s:HGroup width="100%" height="100%" gap="5">
			<component:TextEditorGutter 
				id="gutter" 
				width="30" 
				height="100%"
				styleName="{getStyle('gutterStyleName')}" 
				lineCount="{model.lineCount}"
				verticalScrollPosition="{model.verticalScrollPosition}"
				verticalScrollPolicy="off" 
				horizontalScrollPolicy="off" />
			<s:TextArea 
				id="editor" 
				width="100%" 
				height="100%" 
				styleName="{getStyle('editorStyleName')}" 
				change="model.update();" 
				verticalScrollPolicy="off" />
		</s:HGroup>
	</s:VGroup>
</s:Scroller>